Traceback (most recent call last):
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1776.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\python_venv\psqlpy_venv\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
end_date = datetime.now()  
end = int(end_date.timestamp())
BTC_res = finnhub_client.crypto_candles('BINANCE:BTCUSDT', 'D',1502928000, end)
BTC_df = pd.DataFrame(BTC_res)
BTC_df.head()
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[4], line 4[0m
[0;32m      2[0m end [38;5;241m=[39m [38;5;28mint[39m(end_date[38;5;241m.[39mtimestamp())
[0;32m      3[0m BTC_res [38;5;241m=[39m finnhub_client[38;5;241m.[39mcrypto_candles([38;5;124m'[39m[38;5;124mBINANCE:BTCUSDT[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mD[39m[38;5;124m'[39m,[38;5;241m1502928000[39m, end)
[1;32m----> 4[0m BTC_df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mDataFrame[49m[43m([49m[43mBTC_res[49m[43m)[49m
[0;32m      5[0m BTC_df[38;5;241m.[39mhead()

File [1;32mC:\python_venv\psqlpy_venv\Lib\site-packages\pandas\core\frame.py:733[0m, in [0;36mDataFrame.__init__[1;34m(self, data, index, columns, dtype, copy)[0m
[0;32m    727[0m     mgr [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_init_mgr(
[0;32m    728[0m         data, axes[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mindex[39m[38;5;124m"[39m: index, [38;5;124m"[39m[38;5;124mcolumns[39m[38;5;124m"[39m: columns}, dtype[38;5;241m=[39mdtype, copy[38;5;241m=[39mcopy
[0;32m    729[0m     )
[0;32m    731[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, [38;5;28mdict[39m):
[0;32m    732[0m     [38;5;66;03m# GH#38939 de facto copy defaults to False only in non-dict cases[39;00m
[1;32m--> 733[0m     mgr [38;5;241m=[39m [43mdict_to_mgr[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mmanager[49m[43m)[49m
[0;32m    734[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, ma[38;5;241m.[39mMaskedArray):
[0;32m    735[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mnumpy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mma[39;00m [38;5;28;01mimport[39;00m mrecords

File [1;32mC:\python_venv\psqlpy_venv\Lib\site-packages\pandas\core\internals\construction.py:503[0m, in [0;36mdict_to_mgr[1;34m(data, index, columns, dtype, typ, copy)[0m
[0;32m    499[0m     [38;5;28;01melse[39;00m:
[0;32m    500[0m         [38;5;66;03m# dtype check to exclude e.g. range objects, scalars[39;00m
[0;32m    501[0m         arrays [38;5;241m=[39m [x[38;5;241m.[39mcopy() [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(x, [38;5;124m"[39m[38;5;124mdtype[39m[38;5;124m"[39m) [38;5;28;01melse[39;00m x [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m arrays]
[1;32m--> 503[0m [38;5;28;01mreturn[39;00m [43marrays_to_mgr[49m[43m([49m[43marrays[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mtyp[49m[43m,[49m[43m [49m[43mconsolidate[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m)[49m

File [1;32mC:\python_venv\psqlpy_venv\Lib\site-packages\pandas\core\internals\construction.py:114[0m, in [0;36marrays_to_mgr[1;34m(arrays, columns, index, dtype, verify_integrity, typ, consolidate)[0m
[0;32m    111[0m [38;5;28;01mif[39;00m verify_integrity:
[0;32m    112[0m     [38;5;66;03m# figure out the index, if necessary[39;00m
[0;32m    113[0m     [38;5;28;01mif[39;00m index [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m--> 114[0m         index [38;5;241m=[39m [43m_extract_index[49m[43m([49m[43marrays[49m[43m)[49m
[0;32m    115[0m     [38;5;28;01melse[39;00m:
[0;32m    116[0m         index [38;5;241m=[39m ensure_index(index)

File [1;32mC:\python_venv\psqlpy_venv\Lib\site-packages\pandas\core\internals\construction.py:667[0m, in [0;36m_extract_index[1;34m(data)[0m
[0;32m    664[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mPer-column arrays must each be 1-dimensional[39m[38;5;124m"[39m)
[0;32m    666[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m indexes [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m raw_lengths:
[1;32m--> 667[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mIf using all scalar values, you must pass an index[39m[38;5;124m"[39m)
[0;32m    669[0m [38;5;28;01mif[39;00m have_series:
[0;32m    670[0m     index [38;5;241m=[39m union_indexes(indexes)

[1;31mValueError[0m: If using all scalar values, you must pass an index

